<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="20" passed="16" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-13T13:14:29Z" name="All Test Suite" finished-at="2024-09-13T13:14:39Z" duration-ms="10592">
    <groups>
      <group name="system">
        <method signature="TestTestNGSequence.testDivision()[pri:1, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" name="testDivision" class="org.example.demo111.TestCase.TestTestNGSequence"/>
      </group> <!-- system -->
      <group name="success">
        <method signature="TestTestNGSequence.Addition_11()[pri:1, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" name="Addition_11" class="org.example.demo111.TestCase.TestTestNGSequence"/>
        <method signature="TestTestNGSequence.test_Parameters(java.lang.String)[pri:2, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" name="test_Parameters" class="org.example.demo111.TestCase.TestTestNGSequence"/>
      </group> <!-- success -->
      <group name="smoke">
        <method signature="ExcelDataTest.testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" name="testLogin" class="org.example.demo111.TestCase.ExcelDataTest"/>
        <method signature="TestCMCC.test11_demo_post_Json_fail()[pri:1, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test11_demo_post_Json_fail" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test3()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test3" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test4_jf0001()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test4_jf0001" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test6_jf0006_smsCodeSuccess()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test6_jf0006_smsCodeSuccess" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test6_jf0006_smsCodefail()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test6_jf0006_smsCodefail" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test7_boc_smsCodefail()[pri:1, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test7_boc_smsCodefail" class="org.example.demo111.TestCase.TestCMCC"/>
        <method signature="TestCMCC.test8_boc_smsCodeSuccess()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" name="test8_boc_smsCodeSuccess" class="org.example.demo111.TestCase.TestCMCC"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-09-13T13:14:29Z" name="D:/IDEAProjects/demo111" finished-at="2024-09-13T13:14:39Z" duration-ms="10592">
      <class name="org.example.demo111.TestCase.TestTestNGSequence">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:29Z" name="BeforeSuite" finished-at="2024-09-13T13:14:29Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:29Z" name="BeforeTest" finished-at="2024-09-13T13:14:29Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeClass" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="Addition_11()[pri:1, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="Addition_11" finished-at="2024-09-13T13:14:39Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Addition_11 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="testDivision()[pri:1, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="testDivision" finished-at="2024-09-13T13:14:39Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivision -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="test_Parameters(java.lang.String)[pri:2, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="test_Parameters" data-provider="testParam" finished-at="2024-09-13T13:14:39Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dddddddd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Parameters -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="test_Parameters(java.lang.String)[pri:2, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="test_Parameters" data-provider="testParam" finished-at="2024-09-13T13:14:39Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kkkkkk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Parameters -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="BeforeMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="test_Parameters(java.lang.String)[pri:2, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="test_Parameters" data-provider="testParam" finished-at="2024-09-13T13:14:39Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mmmmm123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_Parameters -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterMethod" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterClass" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterTest" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:org.example.demo111.TestCase.TestTestNGSequence@4be29ed9]" started-at="2024-09-13T13:14:39Z" name="AfterSuite" finished-at="2024-09-13T13:14:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- org.example.demo111.TestCase.TestTestNGSequence -->
      <class name="org.example.demo111.TestCase.TestCMCC">
        <test-method signature="test3()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:29Z" name="test3" finished-at="2024-09-13T13:14:30Z" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4_jf0001()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:30Z" name="test4_jf0001" finished-at="2024-09-13T13:14:35Z" duration-ms="5021" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.http.client.methods.CloseableHttpResponse.close()" because "response" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.http.client.methods.CloseableHttpResponse.close()" because "response" is null
at org.example.demo111.utils.HttpClientUtil.doPost(HttpClientUtil.java:102)
at org.example.demo111.TestCase.TestCMCC.test4_jf0001(TestCMCC.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4_jf0001 -->
        <test-method signature="test6_jf0006_smsCodefail()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:35Z" name="test6_jf0006_smsCodefail" finished-at="2024-09-13T13:14:36Z" duration-ms="1023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6_jf0006_smsCodefail -->
        <test-method signature="test6_jf0006_smsCodeSuccess()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:36Z" name="test6_jf0006_smsCodeSuccess" finished-at="2024-09-13T13:14:39Z" duration-ms="3014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6_jf0006_smsCodeSuccess -->
        <test-method signature="test8_boc_smsCodeSuccess()[pri:0, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:39Z" name="test8_boc_smsCodeSuccess" finished-at="2024-09-13T13:14:39Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8_boc_smsCodeSuccess -->
        <test-method signature="test7_boc_smsCodefail()[pri:1, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:39Z" name="test7_boc_smsCodefail" finished-at="2024-09-13T13:14:39Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7_boc_smsCodefail -->
        <test-method signature="test11_demo_post_Json_fail()[pri:1, instance:org.example.demo111.TestCase.TestCMCC@53fb3dab]" started-at="2024-09-13T13:14:39Z" name="test11_demo_post_Json_fail" finished-at="2024-09-13T13:14:39Z" duration-ms="25" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [8888] but found [9999]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [8888] but found [9999]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at org.example.demo111.TestCase.TestCMCC.test11_demo_post_Json_fail(TestCMCC.java:175)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11_demo_post_Json_fail -->
      </class> <!-- org.example.demo111.TestCase.TestCMCC -->
      <class name="org.example.demo111.TestCase.ExcelDataTest">
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=123456, returnCode=9999, userName=sunhuaiqing, age=38, mark=ps1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=445566, returnCode=0000, userName=zhangsan, age=24, mark=ps2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=111666, returnCode=0000, userName=lisi, age=7, mark=ps3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=888888, returnCode=9999, userName=wangwu, age=99, mark=ps4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=777777, returnCode=0000, userName=wangdana, age=31, mark=ps5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLogin(java.util.HashMap)[pri:1, instance:org.example.demo111.TestCase.ExcelDataTest@4b013c76]" started-at="2024-09-13T13:14:39Z" name="testLogin" data-provider="loginUser" finished-at="2024-09-13T13:14:39Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{passWord=157890, returnCode=9999, userName=wangting, age=38, mark=ps6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
      </class> <!-- org.example.demo111.TestCase.ExcelDataTest -->
    </test> <!-- D:/IDEAProjects/demo111 -->
  </suite> <!-- All Test Suite -->
</testng-results>
